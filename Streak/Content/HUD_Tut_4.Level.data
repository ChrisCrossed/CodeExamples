Level = 
{
	LevelSettings = 
	{
		LinkId = 
		{
			uint Id = 1,
		},
		Named = 
		{
			string Name = "LevelSettings",
		},
		GravityEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			bool LocalSpaceDirection = true,
			float Strength = 10,
			Vec3 Direction = [0, -1, 0],
		},
		DragEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			float Drag = 0.7,
		},
		ForwardRenderer = 
		{
			Vec4 ClearColor = [0.155, 0.155, 0.155, 1],
			bool DrawNonVisible = false,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool EditorIconDepth = true,
			bool Wireframe = false,
		},
		GridDraw = 
		{
			bool Active = true,
			bool HalfCellOffset = false,
			float CellSize = 1,
			GridAxis Axis = ZAxis,
			int Lines = 100,
			bool DrawAxisOrigins = true,
			bool AlwaysDrawInEditor = true,
			bool DrawInGame = false,
			Vec4 GridColor = [0.5, 0.5, 0.5, 0.4],
			Vec4 GridHiLight = [0, 0, 0, 0.4],
			int HilightInterval = 10,
			bool FollowEditorCamera = false,
		},
		Z_HudLogic = 
		{
			int ScoreLimitShown = 0,
		},
		Z_PauseMenuLogic = 
		{
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 2,
		},
		Named = 
		{
			string Name = "EditorCamera",
		},
		Transform = 
		{
			Vec3 Translation = [0.149868, 1.50259, 63.75],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [-0, -1.09278e-008, 0, 1],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Orthographic,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = InheritFromSpace,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 500,
			float Size = 22.1035,
		},
		EditorCameraController = 
		{
			ControlMode ControlMode = ZPlane,
			float LookDistance = 50,
			float VerticalAngle = 0,
			float HorizontalAngle = 0,
			Vec3 LookTarget = [0.149868, 1.50259, 13.75],
			float MoveSensitivity = 1,
		},
		EditorRenderer = 
		{
			Vec4 ClearColor = [0.155, 0.155, 0.155, 1],
			bool DrawNonVisible = true,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool Wireframe = false,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 3,
		},
		Named = 
		{
			string Name = "Camera",
		},
		Transform = 
		{
			Vec3 Translation = [0, 0, 40],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Orthographic,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = InheritFromSpace,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 200,
			float Size = 20,
		},
		Microphone = 
		{
			bool Active = true,
		},
		CameraViewport = 
		{
			bool Background = false,
			Vec2 Offset = [0, 0],
			Vec2 Size = [1, 1],
			int Layer = 2,
			bool Active = true,
			bool Blocking = false,
			uint Renderer = 1,
			uint Camera = 3,
			ViewportScaling Scaling = Fill,
			Vec2 Resolution = [1280, 720],
			Vec4 MarginColor = [0, 0, 0, 1],
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 4,
		},
		Named = 
		{
			string Name = "HUD_Scoreboard",
		},
		Transform = 
		{
			Vec3 Translation = [12, 4.5, -1],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = false,
			bool CastShadows = false,
			Vec4 Color = [0.258824, 0.258824, 0.258824, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "54c674a13cef967c:Template",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		Area = 
		{
			Vec2 Size = [6, 3],
			Location Origin = Center,
		},
		Reactive = 
		{
			bool Active = true,
			bool CaptureMouse = false,
		},
		Hierarchy = 
		{
			Cog = 
			{
				LinkId = 
				{
					uint Id = 5,
				},
				Named = 
				{
					string Name = "Text_Score",
				},
				Transform = 
				{
					Vec3 Translation = [0, 1.5, 6],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				SpriteText = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string FontName = "55ddcb9857d386b9:A little sunshine",
					uint FontSize = 30,
					string Text = "Score: 0 / 750",
					TextAlign Align = Center,
					float PixelsPerUnit = 32,
					bool Smoothing = true,
				},
			},
			Cog = 
			{
				LinkId = 
				{
					uint Id = 6,
				},
				Named = 
				{
					string Name = "Text_Boosts",
				},
				Transform = 
				{
					Vec3 Translation = [0, 0, 6],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				SpriteText = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string FontName = "55ddcb9857d386b9:A little sunshine",
					uint FontSize = 45,
					string Text = "Boosts: 0",
					TextAlign Align = Center,
					float PixelsPerUnit = 32,
					bool Smoothing = true,
				},
			},
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 7,
		},
		Named = 
		{
			string Name = "HUD_RedBoost",
		},
		Transform = 
		{
			Vec3 Translation = [-11, -1.5, 5],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = false,
			bool CastShadows = false,
			Vec4 Color = [0.39, 0.2262, 0.2262, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "54c674a13cef967c:Template",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		Area = 
		{
			Vec2 Size = [3, 3],
			Location Origin = Center,
		},
		Hierarchy = 
		{
			Cog = 
			{
				LinkId = 
				{
					uint Id = 8,
				},
				Named = 
				{
					string Name = "Block",
				},
				Archetyped = 
				{
					string Name = "54c1cb61915814b7:Block",
				},
				Transform = 
				{
					Vec3 Translation = [0, 0.5, 0],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				Sprite = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string SpriteSource = "54c674a13cef967c:Template",
					bool RenderMask = false,
					bool FlipX = false,
					bool FlipY = false,
					bool AnimationActive = true,
					float AnimationSpeed = 1,
					uint StartFrame = 0,
				},
				Area = 
				{
					Vec2 Size = [1, 1],
					Location Origin = Center,
				},
				RigidBody = 
				{
					bool Static = false,
					bool Asleep = false,
					bool Kinematic = true,
					bool RotationLocked = false,
					bool Mode2D = true,
					bool AllowSleep = true,
					bool Inherit2DMode = true,
					Vec3 Velocity = [0, 0, 0],
					Vec3 AngularVelocity = [0, 0, 0],
				},
				BoxCollider = 
				{
					bool Ghost = false,
					bool SendsMessages = true,
					bool Seamless = true,
					string MaterialName = "4de020863e872da8:DefaultPhysicsMaterial",
					string SerializedGroupName = "4e740859314e5515:DefaultGroup",
					Vec3 Offset = [0, 0, 0],
					Vec3 Size = [0.5, 0.5, 0.5],
				},
				Z_BlockLogic = 
				{
					Enum BlockType = Block_One_Static,
				},
				Hierarchy = 
				{
					Cog = 
					{
						LinkId = 
						{
							uint Id = 9,
						},
						Named = 
						{
							string Name = "FireParticleEffect",
						},
						Transform = 
						{
							Vec3 Translation = [0, -0.5, 5],
							Vec3 Scale = [1, 1, 1],
							Quat Rotation = [0, 0, 0, 1],
						},
						SpriteParticleSystem = 
						{
							bool Visible = true,
							bool VisibilityCulling = true,
							bool VisibilityEvents = false,
							bool CastShadows = false,
							SystemChildMode ChildMode = Independent,
							SystemSpace SystemSpace = WorldSpace,
							uint DrawOrder = 0,
							float WarmUpTime = 0,
							ParticleGeometry GeometryMode = Billboarded,
							ParticleRenderMode RenderMode = Blended,
							ParticleSortMode SortMode = Youngest,
							ParticleAnimation ParticleAnimation = Single,
							string Texture = "4fab71e8bcb7a8ce:DefaultTexture",
							Vec4 Tint = [1, 1, 1, 1],
							float VelocityScale = 1,
							float LengthScale = 1,
							float MaxParticleSize = 100,
							Vec3 SystemSize = [4, 4, 4],
						},
						SphericalParticleEmitter = 
						{
							bool Active = false,
							uint EmitCount = 20,
							float EmitRate = 40,
							float EmitVariance = 0,
							float Size = 0.25,
							float SizeVariance = 0.5,
							float Lifetime = 1,
							float LifetimeVariance = 0.2,
							float Spin = 0,
							float SpinVariance = 50,
							bool RandomSpin = true,
							float Fill = 1,
							float EmitterVelocityPercent = 0,
							Vec3 StartVelocity = [0, 4, 0],
							Vec3 RandomVelocity = [3, 0, 0],
							Vec3 TangentVelocity = [0, 0, 0],
							Vec3 EmitterSize = [0, 0, 0],
							bool FastMovingEmitter = false,
						},
						LinearParticleAnimator = 
						{
							Vec3 Force = [0, 0, 0],
							Vec3 RandomForce = [0, 0, 0],
							float Torque = 0,
							float Growth = 0,
							float Dampening = 0,
							Vec3 Twist = [0, 0, 0],
						},
						ParticleColorAnimator = 
						{
							Vec4 Color0 = [1, 0, 0, 0],
							Vec4 Color1 = [1, 0, 0, 1],
							Vec4 Color2 = [0.845, 0.38025, 0, 1],
							Vec4 Color3 = [1, 0.48, 0, 1],
							Vec4 Color4 = [1, 1, 1, 0],
						},
					},
				},
			},
			Cog = 
			{
				LinkId = 
				{
					uint Id = 10,
				},
				Named = 
				{
					string Name = "SpriteText",
				},
				Transform = 
				{
					Vec3 Translation = [-1.28068, -0.126899, 0],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				SpriteText = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string FontName = "55ddcb9857d386b9:A little sunshine",
					uint FontSize = 30,
					string Text = "Boost: A",
					TextAlign Align = Left,
					float PixelsPerUnit = 32,
					bool Smoothing = true,
				},
			},
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 11,
		},
		Named = 
		{
			string Name = "HUD_BlueBoost",
		},
		Transform = 
		{
			Vec3 Translation = [11, -1.5, 5],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = false,
			bool CastShadows = false,
			Vec4 Color = [0.4365, 0.4365, 0.97, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "54c674a13cef967c:Template",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		Area = 
		{
			Vec2 Size = [3, 3],
			Location Origin = Center,
		},
		Hierarchy = 
		{
			Cog = 
			{
				LinkId = 
				{
					uint Id = 12,
				},
				Named = 
				{
					string Name = "Block",
				},
				Archetyped = 
				{
					string Name = "54c1cb61915814b7:Block",
				},
				Transform = 
				{
					Vec3 Translation = [0, 0.5, 0],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				Sprite = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string SpriteSource = "54c674a13cef967c:Template",
					bool RenderMask = false,
					bool FlipX = false,
					bool FlipY = false,
					bool AnimationActive = true,
					float AnimationSpeed = 1,
					uint StartFrame = 0,
				},
				Area = 
				{
					Vec2 Size = [1, 1],
					Location Origin = Center,
				},
				RigidBody = 
				{
					bool Static = false,
					bool Asleep = false,
					bool Kinematic = true,
					bool RotationLocked = false,
					bool Mode2D = true,
					bool AllowSleep = true,
					bool Inherit2DMode = true,
					Vec3 Velocity = [0, 0, 0],
					Vec3 AngularVelocity = [0, 0, 0],
				},
				BoxCollider = 
				{
					bool Ghost = false,
					bool SendsMessages = true,
					bool Seamless = true,
					string MaterialName = "4de020863e872da8:DefaultPhysicsMaterial",
					string SerializedGroupName = "4e740859314e5515:DefaultGroup",
					Vec3 Offset = [0, 0, 0],
					Vec3 Size = [0.5, 0.5, 0.5],
				},
				Z_BlockLogic = 
				{
					Enum BlockType = Block_Two_Static,
				},
				Hierarchy = 
				{
					Cog = 
					{
						LinkId = 
						{
							uint Id = 13,
						},
						Named = 
						{
							string Name = "FireParticleEffect",
						},
						Transform = 
						{
							Vec3 Translation = [0, -0.5, 5],
							Vec3 Scale = [1, 1, 1],
							Quat Rotation = [0, 0, 0, 1],
						},
						SpriteParticleSystem = 
						{
							bool Visible = true,
							bool VisibilityCulling = true,
							bool VisibilityEvents = false,
							bool CastShadows = false,
							SystemChildMode ChildMode = Independent,
							SystemSpace SystemSpace = WorldSpace,
							uint DrawOrder = 0,
							float WarmUpTime = 0,
							ParticleGeometry GeometryMode = Billboarded,
							ParticleRenderMode RenderMode = Blended,
							ParticleSortMode SortMode = Youngest,
							ParticleAnimation ParticleAnimation = Single,
							string Texture = "4fab71e8bcb7a8ce:DefaultTexture",
							Vec4 Tint = [1, 1, 1, 1],
							float VelocityScale = 1,
							float LengthScale = 1,
							float MaxParticleSize = 100,
							Vec3 SystemSize = [4, 4, 4],
						},
						SphericalParticleEmitter = 
						{
							bool Active = false,
							uint EmitCount = 20,
							float EmitRate = 40,
							float EmitVariance = 0,
							float Size = 0.25,
							float SizeVariance = 0.5,
							float Lifetime = 1,
							float LifetimeVariance = 0.2,
							float Spin = 0,
							float SpinVariance = 50,
							bool RandomSpin = true,
							float Fill = 1,
							float EmitterVelocityPercent = 0,
							Vec3 StartVelocity = [0, 4, 0],
							Vec3 RandomVelocity = [3, 0, 0],
							Vec3 TangentVelocity = [0, 0, 0],
							Vec3 EmitterSize = [0, 0, 0],
							bool FastMovingEmitter = false,
						},
						LinearParticleAnimator = 
						{
							Vec3 Force = [0, 0, 0],
							Vec3 RandomForce = [0, 0, 0],
							float Torque = 0,
							float Growth = 0,
							float Dampening = 0,
							Vec3 Twist = [0, 0, 0],
						},
						ParticleColorAnimator = 
						{
							Vec4 Color0 = [1, 0, 0, 0],
							Vec4 Color1 = [1, 0, 0, 1],
							Vec4 Color2 = [0.845, 0.38025, 0, 1],
							Vec4 Color3 = [1, 0.48, 0, 1],
							Vec4 Color4 = [1, 1, 1, 0],
						},
					},
				},
			},
			Cog = 
			{
				LinkId = 
				{
					uint Id = 14,
				},
				Named = 
				{
					string Name = "SpriteText",
				},
				Transform = 
				{
					Vec3 Translation = [-1.23474, -0.126899, 0],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				SpriteText = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = false,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 1],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string FontName = "55ddcb9857d386b9:A little sunshine",
					uint FontSize = 30,
					string Text = "Boost: D",
					TextAlign Align = Left,
					float PixelsPerUnit = 32,
					bool Smoothing = true,
				},
			},
		},
	},
},
